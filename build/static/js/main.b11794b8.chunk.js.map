{"version":3,"sources":["shared/Components/TouchableOpacity/js.js","shared/Components/ScrollView/js.js","shared/Components/View/js.js","shared/Components/Image/js.js","shared/Components/Text/js.js","shared/Components/StyleSheet/js.js","shared/Components/Request/js.js","shared/Components/UI/js.js","shared/custom-react-native.js","shared/Components/Images/js.js","modules/template/Template.js","AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["Component","uniqid","prefix","random","sec","Date","now","Math","id","toString","replace","padEnd","trunc","Item","props","state","propStyles","this","style","display","flexDirection","children","StyleSheet","hosting","string","obj","JSON","stringify","method","url","parameters","headers","data","Promise","resolve","reject","a","xhttp","XMLHttpRequest","new_query_string","index","parameter_array","param_keys","Object","keys","map","param_key","param_value","push","length","join","onreadystatechange","readyState","status","responseText","response_text","parsed","parse","success","e","new_url","open","setRequestHeader","header_key","header_value","item","append","send","create","styles","UI","IconTint","_this","search","encodeParams","add_to_link","goTo","history","getWidth","max","document","body","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","scrollHeight","offsetHeight","clientHeight","colors","primary","secondary","black","yellow","box","size","height","width","PadView","paddingX","paddingRight","paddingLeft","checkIfMobile","setState","isMobile","initiateView","initialState","componentDidMount","window","addEventListener","resize","on_resize","onCreate","componentWillUnmount","removeEventListener","Row","undefined","breakpoint","breakpoint_2","Column","timestampToDate","timestamp","parseInt","dateObj","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","h_m_am_pm","toLocaleString","hour","hour12","minute","am_pm","split","toLowerCase","h_m","h","m","month_string","LOGO","Template","main_container","backgroundColor","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b11794b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default class Item extends Component {\r\n  constructor(props = { style: {}, onClick: () => {} }) {\r\n    super(props);\r\n    this.state = {\r\n      animate: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let propStyles = {};\r\n    if (this.props.style) {\r\n      propStyles = this.props.style;\r\n    }\r\n\r\n    return (\r\n      <CSSTransition in={this.state.animate} timeout={200} classNames=\"button\">\r\n        <div\r\n          onMouseDown={() => {\r\n            this.setState({\r\n              animate: true,\r\n            });\r\n          }}\r\n          onMouseOut={() => {\r\n            this.setState({\r\n              animate: false,\r\n            });\r\n          }}\r\n          onMouseUp={() => {\r\n            this.setState({\r\n              animate: false,\r\n            });\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            display: \"inline-flex\",\r\n            userSelect: \"none\",\r\n            flexDirection: \"column\",\r\n            ...propStyles,\r\n          }}\r\n          onClick={() => {\r\n            if (this.props.onClick) {\r\n              this.props.onClick();\r\n            }\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\nfunction uniqid(prefix = \"\", random = false) {\r\n  const sec = Date.now() * 1000 + Math.random() * 1000;\r\n  const id = sec.toString(16).replace(/\\./g, \"\").padEnd(14, \"0\");\r\n  return `${prefix}${id}${\r\n    random ? `.${Math.trunc(Math.random() * 100000000)}` : \"\"\r\n  }`;\r\n}\r\nexport default class Item extends Component {\r\n  constructor(props = { style: {}, horizontal: false }) {\r\n    super(props);\r\n  }\r\n  id = uniqid(\"scroll\");\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.getId) {\r\n      this.props.getId(() => {\r\n        return this.id;\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let propStyles = {};\r\n    if (this.props.style) {\r\n      propStyles = this.props.style;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        id={this.id}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"inline-flex\",\r\n          flexDirection: this.props.horizontal ? \"row\" : \"column\",\r\n          overflowX: this.props.horizontal ? \"auto\" : \"hidden\",\r\n          overflowY: this.props.horizontal ? \"hidden\" : \"auto\",\r\n          ...propStyles,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\n\r\nexport default class Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    let propStyles = {};\r\n    if (this.props.style) {\r\n      propStyles = this.props.style;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n            display: \"inline-flex\",\r\n            flexDirection: \"column\",\r\n          ...propStyles,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\nimport IconTint from \"react-icon-tint\";\r\n\r\nexport default class Item extends Component {\r\n  constructor(props = { style: {}, source: \"\", imageFit: \"contain\" }) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let propStyles = {};\r\n    if (this.props.style) {\r\n      propStyles = this.props.style;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...propStyles,\r\n          backgroundImage: \"url(\" + this.props.source + \")\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n          display: \"inline-flex\",\r\n          flexDirection: \"column\",\r\n          backgroundSize: this.props.imageFit,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Image extends Component {\r\n  constructor(props = { height: 0, width: 0, tintColor: \"white\", source: \"\" }) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style = {{height: this.props.height, width: this.props.width}}>\r\n        <IconTint\r\n          src={this.props.source}\r\n          maxHeight={this.props.height}\r\n          maxWidth={this.props.width}\r\n          color={this.props.tintColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ImageFit = {\r\n  CONTAIN: \"contain\",\r\n  COVER: \"cover\",\r\n  FILL: \"fill\",\r\n  INHERIT: \"inherit\",\r\n  INITIAL: \"initial\",\r\n  NONE: \"none\",\r\n  REVERT: \"revert\",\r\n  SCALEDOWN: \"scale-down\",\r\n  UNSET: \"unset\",\r\n};\r\n\r\nexport { ImageFit };\r\n","import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\n\r\nexport default class Item extends Component {\r\n  constructor(props = { style: {} }) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let propStyles = {};\r\n    if (this.props.style) {\r\n      propStyles = this.props.style;\r\n    }\r\n\r\n    return <span style={{ ...propStyles }}>{this.props.children}</span>;\r\n  }\r\n}\r\n","class stylesheet {\r\n  create = (styles = {}) => {\r\n    return styles;\r\n  };\r\n}\r\n\r\nconst StyleSheet = new stylesheet();\r\nexport default StyleSheet;","\r\nclass Request {\r\n  hosting = \"http://internal.malabon.highlysucceed.com/\";\r\n  \r\n  request(method = \"GET\", url = \"\", parameters = {}, headers = {}, data) {\r\n    return new Promise(async (resolve, reject) => {\r\n      var xhttp = new XMLHttpRequest();\r\n      let new_query_string = \"\";\r\n      let index = 0;\r\n      let parameter_array = [];\r\n\r\n      let param_keys = Object.keys(parameters);\r\n      param_keys.map((param_key) => {\r\n        index++;\r\n        let param_value = parameters[param_key];\r\n        parameter_array.push(param_key + \"=\" + param_value);\r\n        if (index == param_keys.length) {\r\n          new_query_string = parameter_array.join(\"&\");\r\n        }\r\n      });\r\n      let string = \"\";\r\n      xhttp.onreadystatechange = async function () {\r\n        string += this.readyState + \"  \" + this.status + \"  \" + this.responseText + \"\\n\\n\";\r\n        if (this.readyState == 4 && this.status < 400) {\r\n          let response_text = this.responseText;\r\n          try {\r\n            let parsed = JSON.parse(response_text);\r\n            parsed.success = true;\r\n            resolve(parsed);\r\n          } catch (e) {\r\n            resolve(response_text);\r\n          }\r\n        } else if (this.readyState == 4 && this.status >= 400) {\r\n          let response_text = this.responseText;\r\n          try {\r\n            let parsed = JSON.parse(response_text);\r\n            parsed.success = false;\r\n            resolve(parsed);\r\n          } catch (e) {\r\n            resolve(response_text);\r\n          }\r\n        }\r\n      };\r\n\r\n      let new_url = this.hosting + url;\r\n      if (method == \"GET\") {\r\n        new_url = this.hosting + url + \"?\" + new_query_string;\r\n      }\r\n\r\n\r\n      xhttp.open(method, new_url, true);\r\n\r\n      if (method == \"POST\") {\r\n        if (!data) {\r\n          xhttp.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n          );\r\n        }\r\n        if (data && Object.keys(parameters).length > 0) {\r\n          xhttp.setRequestHeader(\r\n            \"Content-type\",\r\n            \"multipart/form-data\"\r\n          );\r\n        }\r\n        xhttp.setRequestHeader(\r\n          \"Accept\",\r\n          \"application/json\"\r\n        );\r\n      }\r\n      if (method == \"PUT\") {\r\n        xhttp.setRequestHeader(\r\n          \"Content-type\",\r\n          \"application/x-www-form-urlencoded\"\r\n        );\r\n        xhttp.setRequestHeader(\r\n          \"Accept\",\r\n          \"application/json\"\r\n        );\r\n      }\r\n      let header_keys = Object.keys(headers);\r\n      header_keys.map((header_key) => {\r\n        let header_value = headers[header_key];\r\n        xhttp.setRequestHeader(header_key, header_value);\r\n      });\r\n\r\n      if (data) {\r\n        let keys = Object.keys(parameters);\r\n        if (keys.length > 0) {\r\n          keys.map(item => {\r\n            data.append(item, parameters[item])\r\n          });\r\n        }\r\n        xhttp.send(data);\r\n      } else {\r\n        xhttp.send(new_query_string);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  string = (obj) => {\r\n    return JSON.stringify(obj);\r\n  }\r\n}\r\n\r\nconst r = new Request();\r\nexport default r;\r\n","import React from \"react\";\r\nimport Images from \"../Images/js\";\r\nimport { View } from \"../../custom-react-native\";\r\n\r\nclass ui extends Images {\r\n  _this = null;\r\n  search = async (url, parameters = {}) => {\r\n    let add_to_link = await this.encodeParams(parameters);\r\n    url = url + \"?\" + add_to_link;\r\n    this.goTo(url);\r\n  };\r\n\r\n  encodeParams = (parameters = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      let new_query_string = \"\";\r\n      let index = 0;\r\n      let parameter_array = [];\r\n      let param_keys = Object.keys(parameters);\r\n      if (param_keys.length == 0) {\r\n        resolve(\"\");\r\n      }\r\n      param_keys.map((param_key) => {\r\n        index++;\r\n        let param_value = parameters[param_key];\r\n        if (!param_value) {\r\n          param_value = \"\";\r\n        }\r\n        parameter_array.push(param_key + \"=\" + param_value);\r\n        if (index == param_keys.length) {\r\n          new_query_string = parameter_array.join(\"&\");\r\n          resolve(new_query_string);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  goTo = (url) => {\r\n    this._this.props.history.push(url)\r\n  };/* \r\n  goTo = (url) => {\r\n    window.location.href = url;\r\n  };\r\n */\r\n  getWidth = () => {\r\n    return Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n  };\r\n  getHeight = () => {\r\n    return Math.max(\r\n      document.body.scrollHeight,\r\n      document.documentElement.scrollHeight,\r\n      document.body.offsetHeight,\r\n      document.documentElement.offsetHeight,\r\n      document.documentElement.clientHeight\r\n    );\r\n  };\r\n\r\n  colors = {\r\n    primary: \"#04CCFF\",\r\n    secondary: \"#004F99\",\r\n    black: \"#5D5D5D\",\r\n    yellow: \"#FCC203\",\r\n  };\r\n  box = (size) => {\r\n    return <div style={{ height: size, width: size }}></div>;\r\n  };\r\n\r\n  PadView = (props = { _this: null, style: {} }) => {\r\n    const _this = props._this;\r\n    const width = _this.state.width;\r\n    const paddingX = width * 0.05;\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          paddingRight: paddingX,\r\n          paddingLeft: paddingX,\r\n          ...props.style,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  resize(_this) {\r\n    const width = this.getWidth();\r\n    if (width !== _this.state.width) {\r\n      _this.setState({\r\n        width: width,\r\n        height: this.getHeight(),\r\n      });\r\n      this.checkIfMobile(_this);\r\n    }\r\n  }\r\n\r\n  checkIfMobile = (_this) => {\r\n    let width = _this.state.width;\r\n    if (width < 720) {\r\n      _this.setState({\r\n        isMobile: true,\r\n      });\r\n    } else {\r\n      _this.setState({\r\n        isMobile: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  initiateView = (_this, initialState = {}) => {\r\n    this._this = _this;\r\n    _this.state = {\r\n      width: this.getWidth(),\r\n      height: this.getHeight(),\r\n      isMobile: this.getWidth() < 720 ? true : false,\r\n      ...initialState,\r\n    };\r\n    _this.componentDidMount = () => {\r\n      window.addEventListener(\"resize\", () => {\r\n        this.resize(_this);\r\n        if (_this.on_resize) {\r\n          _this.on_resize();\r\n        }\r\n      });\r\n      if (_this.onCreate) {\r\n        _this.onCreate();\r\n      }\r\n    };\r\n\r\n    _this.componentWillUnmount = () => {\r\n      window.removeEventListener(\"resize\", () => {\r\n        this.resize(_this);\r\n      });\r\n    };\r\n  };\r\n\r\n  \r\n  uniqid = (prefix = \"\", random = false) => {\r\n    const sec = Date.now() * 1000 + Math.random() * 1000;\r\n    const id = sec.toString(16).replace(/\\./g, \"\").padEnd(14, \"0\");\r\n    return `${prefix}${id}${\r\n      random ? `.${Math.trunc(Math.random() * 100000000)}` : \"\"\r\n    }`;\r\n  };\r\n  \r\n  Row = (props = {_this: null, style : {}}) => {\r\n    const _this = props._this;\r\n    const isMobile = _this.state.isMobile;\r\n    let flexDirection = \"row\";\r\n    if (isMobile) {\r\n      flexDirection = \"column\";\r\n    } else {\r\n      flexDirection = \"row\";\r\n    }\r\n    if (props.breakpoint != undefined) {\r\n      const width = _this.state.width;\r\n      if (width <= props.breakpoint) {\r\n        flexDirection = \"column\";\r\n        if (props.breakpoint_2 != undefined) {\r\n          if (width <= props.breakpoint_2) {\r\n            flexDirection = \"row\";\r\n          } else {\r\n            flexDirection = \"column\";\r\n          }\r\n        }\r\n      } else {\r\n        flexDirection = \"row\";\r\n      }\r\n    }\r\n    return (\r\n      <View style = {{...props.style, flexDirection: flexDirection}} >\r\n        {props.children}\r\n      </View>\r\n    );\r\n  } \r\n  \r\n  Column = (props = {_this: null, style : {}}) => {\r\n    const _this = props._this;\r\n    const isMobile = _this.state.isMobile;\r\n    const width = _this.state.width;\r\n    let flexDirection = \"column\";\r\n    if (isMobile) {\r\n      flexDirection = \"row\";\r\n    } else {\r\n      flexDirection = \"column\";\r\n    }\r\n    if (props.breakpoint != undefined) {\r\n      if (width <= props.breakpoint) {\r\n        flexDirection = \"row\";\r\n        if (props.breakpoint_2 != undefined) {\r\n          if (width <= props.breakpoint_2) {\r\n            flexDirection = \"column\";\r\n          } else {\r\n            flexDirection = \"row\";\r\n          }\r\n        }\r\n      } else {\r\n        flexDirection = \"column\";\r\n      }\r\n    }\r\n    return (\r\n      <View style = {{...props.style, flexDirection: flexDirection}} >\r\n        {props.children}\r\n      </View>\r\n    );\r\n  } \r\n  timestampToDate = (timestamp)=> {\r\n    timestamp = parseInt(timestamp);\r\n    var dateObj = new Date(timestamp);\r\n    var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    var day = dateObj.getUTCDate();\r\n    var year = dateObj.getUTCFullYear();\r\n    let h_m_am_pm = dateObj.toLocaleString('en-US', { hour: 'numeric', hour12: true, minute: '2-digit' });\r\n    let newdate = year + \"/\" + month + \"/\" + day + \" \" + h_m_am_pm;\r\n    let am_pm = h_m_am_pm.split(\" \")[1].toLowerCase();\r\n    let h_m = h_m_am_pm.split(\" \")[0];\r\n    let h = h_m.split(\":\")[0];\r\n    let m = h_m.split(\":\")[1];\r\n\r\n    let month_string = \"\";\r\n    if (month == 1) {\r\n      month_string = \"January\";\r\n    } else if (month == 2) {\r\n      month_string = \"February\";\r\n    } else if (month == 3) {\r\n      month_string = \"March\";\r\n    } else if (month == 4) {\r\n      month_string = \"April\";\r\n    } else if (month == 5) {\r\n      month_string = \"May\";\r\n    } else if (month == 6) {\r\n      month_string = \"June\";\r\n    } else if (month == 7) {\r\n      month_string = \"July\";\r\n    } else if (month == 8) {\r\n      month_string = \"August\";\r\n    } else if (month == 9) {\r\n      month_string = \"September\";\r\n    } else if (month == 10) {\r\n      month_string = \"October\";\r\n    } else if (month == 11) {\r\n      month_string = \"November\";\r\n    } else if (month == 12) {\r\n      month_string = \"December\";\r\n    }\r\n\r\n\r\n    let obj = {\r\n      year: year,\r\n      month: month,\r\n      day: day,\r\n      am_pm: am_pm,\r\n      h_m: h_m,\r\n      hour: h,\r\n      minute: m,\r\n      month_string: month_string\r\n    }\r\n\r\n    return obj;\r\n  }\r\n}\r\n\r\nconst UI = new ui();\r\nexport default UI;\r\n","import TouchableOpacity from \"./Components/TouchableOpacity/js\";\r\nimport ScrollView from \"./Components/ScrollView/js\";\r\nimport View from \"./Components/View/js\";\r\nimport ImageBackground, { ImageFit, Image } from \"./Components/Image/js\";\r\nimport Text from \"./Components/Text/js\";\r\nimport r from \"./Components/Request/js\";\r\nimport StyleSheet from \"./Components/StyleSheet/js\";\r\nimport IconTint from 'react-icon-tint';\r\nconst Icon = IconTint;\r\n\r\nexport default TouchableOpacity\r\nexport {TouchableOpacity};\r\nexport {ScrollView};\r\nexport {View};\r\nexport {Image};\r\nexport {ImageBackground};\r\nexport {ImageFit};\r\nexport {Text};\r\nexport {StyleSheet};\r\nexport {Icon};\r\nexport {r};\r\n\r\n\r\n","//Images are stored in public folder\r\nclass Images {\r\n  LOGO = \"./img/logo.png\";\r\n  \r\n}\r\n\r\nexport default Images;\r\n","import React, { Component } from \"react\";\r\nimport \"./css.css\";\r\nimport {\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  ImageFit,\r\n  Text,\r\n  StyleSheet,\r\n} from \"../../shared/custom-react-native\";\r\nimport UI from \"../../shared/Components/UI/js\";\r\n\r\nexport default class Template extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    UI.initiateView(this, {\r\n        //Initial State Here\r\n\r\n    });\r\n  }\r\n  \r\n\r\n  render() {\r\n      \r\n    return (\r\n      <View style={styles.main_container}>\r\n          \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#f3f3f3\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Template from \"./modules/template/Template\";\r\n\r\nfunction AppRouter() {\r\n  return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Template} />\r\n      </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n      <BrowserRouter>\r\n        <AppRouter />\r\n      </BrowserRouter>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport \"./shared/assets/css/main.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nreportWebVitals();\r\n"],"sourceRoot":""}